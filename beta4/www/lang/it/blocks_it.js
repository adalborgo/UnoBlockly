/**
 * @package: UnoBlockly
 * @file blocks_it.js
 * @version 0.1 (23-07-2021)
 * @description Blockly messages
 * @author Antonio Dal Borgo <adalborgo@gmail.com>
 */

'use strict';

//--- Miscellaneous ---//
Blockly.Msg["error"] = "Errore: Blocco non connesso!";
Blockly.Msg["ADD_COMMENT"] = "Aggiungi commento";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Modifica valore:";
Blockly.Msg["CLEAN_UP"] = "Pulisci i blocchi";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "I blocchi compressi contengono avvertimenti.";
Blockly.Msg["COLLAPSE_ALL"] = "Comprimi blocchi";
Blockly.Msg["COLLAPSE_BLOCK"] = "Comprimi blocco";
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Area di lavoro di Blockly";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Scrivi qualcosa...";
Blockly.Msg["TODAY"] = "Oggi";
Blockly.Msg["UNDO"] = "Annulla";
Blockly.Msg["UNNAMED_KEY"] = "senza nome";
Blockly.Msg["REDO"] = "Ripeti";
Blockly.Msg["DELETE_X_BLOCKS"] = "Cancella %1 blocchi";
Blockly.Msg["DISABLE_BLOCK"] = "Disattiva blocco";
Blockly.Msg["DUPLICATE_BLOCK"] = "Duplica";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplica commento";
Blockly.Msg["ENABLE_BLOCK"] = "Attiva blocco";
Blockly.Msg["EXPAND_ALL"] = "Espandi blocchi";
Blockly.Msg["EXPAND_BLOCK"] = "Espandi blocco";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Cancellare tutti i %1 blocchi?";
Blockly.Msg["DELETE_BLOCK"] = "Cancella blocco";
Blockly.Msg["EXTERNAL_INPUTS"] = "Ingressi esterni";
Blockly.Msg["HELP"] = "Aiuto";
Blockly.Msg["INLINE_INPUTS"] = "Ingressi in linea";
Blockly.Msg["AT"] = "a";
Blockly.Msg["EQUAL"] = " = ";

//--- Controls ---//
Blockly.Msg["CAT_LOOPS"] = "Cicli";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "esce dal ciclo";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "prosegui con la successiva iterazione del ciclo";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Esce dal ciclo.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Salta il resto di questo ciclo e prosegue con la successiva iterazione.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Attenzioneː Questo blocco può essere usato solo in un ciclo.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "per ogni elemento %1 nella lista %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Per ogni elemento in una lista, imposta la variabile '%1'  pari all'elemento e quindi esegue alcune istruzioni.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "Ripeti con %1 da %2 a %3 per %4";
Blockly.Msg["CONTROLS_FOR"] = "Ripeti con";
Blockly.Msg["CONTROLS_FOR_FROM"] = "da";
Blockly.Msg["CONTROLS_FOR_TO"] = "a";
Blockly.Msg["CONTROLS_FOR_BY"] = "per";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "La variabile che controlla il ciclo prende tutti i valori compresi tra quello iniziale e quello finale con un 'passo' pari al valore indicato, in questo modo il blocco interno viene eseguito ripetutamente per ogni valore della variabile 'contatore'.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Aggiungi una condizione al blocco se.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Aggiungi una condizione finale pigliatutto al blocco se.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Aggiungi, elimina o riordina le sezioni per riconfigurare questo blocco se.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "altrimenti";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "altrimenti se";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "se";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Se un valore è vero allora esegue alcune istruzioni.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Se un valore è vero allora esegue il primo blocco di istruzioni. Altrimenti esegue il secondo blocco di istruzioni.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Se il primo valore è vero allora esegue un primo blocco di istruzioni. Altrimenti, se il secondo valore è vero, esegue un secondo blocco di istruzioni.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Se il primo valore è vero allora esegue un primo blocco di istruzioni. Altrimenti, se il secondo valore è vero, esegue un secondo blocco di istruzioni. Se nessuno dei valori è vero esegue l'ultimo blocco di istruzioni.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://it.wikipedia.org/wiki/Ciclo_for";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "fai";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "Ripeti %1 volte";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Esegue alcune istruzione diverse volte.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "Ripeti fino a che";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "Ripeti mentre";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Finché un valore è falso, esegue alcune istruzioni.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Finché un valore è vero, esegue alcune istruzioni.";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];

//--- Logic ---//
Blockly.Msg["CAT_LOGIC"] = "Controllo";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "falso";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Restituisce vero o falso.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "vero";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://it.wikipedia.org/wiki/Disuguaglianza";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Restituisce vero se gli input sono uno uguale all'altro.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Restituisce vero se il primo input è maggiore o uguale al secondo.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Restituisce uguale se il primo input è maggiore o uguale al secondo input.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Restituisce vero se il primo input è minore del secondo.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Restituisce vero se il primo input è minore o uguale al secondo.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Restituisce vero se gli input non sono uno uguale all'altro.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "non %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Restituisce vero se l'input è falso. Restituisce falso se l'input è vero.";
Blockly.Msg["LOGIC_NULL"] = "nullo";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Restituisce valore nullo.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "e";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "o";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Restituisce vero se entrambi gli input sono veri.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Restituisce vero se almeno uno degli input è vero.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "test";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "se falso";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "se vero";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Verifica la condizione in 'test'. Se questa è vera restituisce il valore 'se vero' altrimenti restituisce il valore 'se falso'.";

//--- Math ---//
Blockly.Msg["CAT_MATH"] = "Matematica";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://it.wikipedia.org/wiki/Aritmetica";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Restituisce la somma dei due numeri.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Restituisce il quoziente dei due numeri.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Restituisce la differenza dei due numeri.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Restituisce il prodotto dei due numeri.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Restituisce il primo numero elevato alla potenza del secondo numero.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://it.wikipedia.org/wiki/Arcotangente2";
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 di X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Restituisce l'arcotangente del punto (X, Y) in gradi da -180 a 180.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://it.wikipedia.org/wiki/Addizione";
Blockly.Msg["MATH_CHANGE_TITLE"] = "cambia %1 di %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Aggiunge un numero alla variabile '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://it.wikipedia.org/wiki/Costante_matematica";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Restituisce una delle costanti comuniː π (3.141…), e (2.718…), φ (1.618…), radq(2) (1.414…), radq(½) (0.707…) o ∞ (infinito).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "costringi %1 da %2 a %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Costringe un numero all'interno dei limiti indicati (compresi).";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "è divisibile per";
Blockly.Msg["MATH_IS_EVEN"] = "è pari";
Blockly.Msg["MATH_IS_NEGATIVE"] = "è negativo";
Blockly.Msg["MATH_IS_ODD"] = "è dispari";
Blockly.Msg["MATH_IS_POSITIVE"] = "è positivo";
Blockly.Msg["MATH_IS_PRIME"] = "è primo";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Verifica se un numero è pari, dispari, primo, intero, positivo, negativo o se è divisibile per un certo numero. Restituisce vero o falso.";
Blockly.Msg["MATH_IS_WHOLE"] = "è intero";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://it.wikipedia.org/wiki/Resto";
Blockly.Msg["MATH_MODULO_TITLE"] = "resto di %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Restituisce il resto della divisione di due numeri.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://it.wikipedia.org/wiki/Numero";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Un numero.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "media della lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "massimo della lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana della lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "minimo della lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "mode della lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "elemento casuale della lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "deviazione standard della lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "somma la lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Restituisce la media (media aritmetica) dei valori numerici nella lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Restituisce il più grande numero della lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Restituisce il valore mediano della lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Restituisce il più piccolo numero della lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Restituisce una lista degli elementi più frequenti nella lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Restituisce un elemento casuale della lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Restituisce la deviazione standard della lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Restituisce la somma di tutti i numeri nella lista.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://it.wikipedia.org/wiki/Numeri_pseudo-casuali";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "Numero casuale";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Restituisce una frazione compresa fra 0.0 (incluso) e 1.0 (escluso).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://it.wikipedia.org/wiki/Numeri_pseudo-casuali";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "Numero casuale da %1 a %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Restituisce un numero casuale compreso tra i due limiti indicati (inclusi).";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://it.wikipedia.org/wiki/Arrotondamento";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "Arrotonda";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "Arrotonda verso il basso";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "Arrotonda verso l'alto";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Arrotonda un numero verso l'alto o verso il basso.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://it.wikipedia.org/wiki/Radice_quadrata";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "Valore assoluto";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "Radice quadrata";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Restituisce il valore assoluto del numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Restituisce e elevato alla potenza del numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Restituisce il logaritmo naturale del numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Restituisce il logaritmo in base 10 del numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Restituisce l'opposto del numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Restituisce 10 elevato alla potenza del numero.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Restituisce la radice quadrata del numero.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";  // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos";  // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://it.wikipedia.org/wiki/Funzione_trigonometrica";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";  // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Restituisce l'arco-coseno di un numero.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Restituisce l'arco-seno di un numero.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Restituisce l'arco-tangente di un numero.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Restituisce il coseno di un angolo espresso in gradi (non radianti).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Restituisce il seno di un angolo espresso in gradi (non radianti).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Restituisce la tangente di un angolo espresso in gradi (non radianti).";
Blockly.Msg["MATH_INC_TITLE"] = "Incrementa ";
Blockly.Msg["MATH_INC_DEC_FIRST_AFTER"] = [["prima", "FIRST"], ["dopo", "AFTER"]]; // Incrementa/Decrementa (prima/dopo)";
Blockly.Msg["MATH_INC_TOOLTIP"] = "Incrementa una variabile intera prima o dopo essere stata letta.";
Blockly.Msg["MATH_DEC_TITLE"] = "Decrementa ";
Blockly.Msg["MATH_DEC_TOOLTIP"] = "Decrementa una variabile intera prima o dopo essere stata letta.";
Blockly.Msg["MATH_MAP"] = "map ( X =";
Blockly.Msg["MATH_MAP_XMIN"] = " Xmin =";
Blockly.Msg["MATH_MAP_XMAX"] = "Xmax =";
Blockly.Msg["MATH_MAP_YMIN"] = "Ymin =";
Blockly.Msg["MATH_MAP_YMAX"] = "Ymax =";
Blockly.Msg["MATH_MAP_END"] = ")"; 
Blockly.Msg["MATH_MAP_TOOLTIP"] = "Trasformazione lineare: y = map(X, Xmin, Xmax, Ymin, Ymax)";
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = "elemento";

// Arrays
Blockly.Msg["CAT_ARRAYS"] = "Matrici";
Blockly.Msg["ARRAY_CREATE_EMPTY_TITLE"] = 'svuota';
Blockly.Msg["ARRAY_CREATE_WITH"] = "fatto di";
Blockly.Msg["ARRAY_WITH_ITEMS"] = "con";
Blockly.Msg["VARIABLES_TYPE"] = "Tipo";
Blockly.Msg["ARRAY_CREATE_WITH_CONTAINER_TITLE_ADD"] = "Matrice";
Blockly.Msg["ARRAY_CREATE_WITH_CONTAINER_TOOLTIP"] = "Aggiungi, elimina o riordina";
Blockly.Msg["ARRAY_CREATE_WITH_INPUT_WITH"] = "elementi";
Blockly.Msg["ARRAY_CREATE_WITH_ITEM_TITLE"] = "elemento";
Blockly.Msg["ARRAY_CREATE_WITH_TOOLTIP"] = "Restituisce una matrice con un numero di elementi";
Blockly.Msg["ARRAY_GETINDEX_ITEM"] = "Elemento della matrice";
Blockly.Msg["ARRAY_GETINDEX_ITEM2"] = "Matrice";
Blockly.Msg["ARRAY_GETINDEX_TOOLTIP1"] = "Restituisce il valore memorizzato nell'elemento di matrice";
Blockly.Msg["ARRAY_GETINDEX_TOOLTIP2"] = "Crea una matrice del tipo selezionato";
Blockly.Msg["ARRAY_GETINDEX_TOOLTIP3"] = "Imposta un elemento della matrice al valore indicato";
Blockly.Msg["ARRAY_GETINDEX_TOOLTIP4"] = "Crea un vettore del tipo selezionato";
Blockly.Msg["ARRAY_CREATE"] = "Crea la matrice";
Blockly.Msg["ARRAY_CREATE_VECTOR"] = "Crea il vettore";
Blockly.Msg["ARRAY_CREATE_SEPARATOR"] = "Separatore";
Blockly.Msg["ARRAY_SET_INDEX"] = "Assegna l'elemento della matrice";
Blockly.Msg["ARRAY_DIM"] = "Dimensioni";
Blockly.Msg["ARRAY_DIM_ITEMS"] = "elemento/i";
Blockly.Msg["ARRAY_DIM_ELEMENTS"] = "con numero di elementi";
Blockly.Msg["ARRAY_INDEX"] = "con indice/i";
Blockly.Msg["SIZE"] = "Dimensione del vettore";
Blockly.Msg["SIZE_TOOLTIP"] = "Restituisce la dimensione di un vettore";
Blockly.Msg["ARRAY_DIMS"] = [["1", "1"],["2", "2"],["3", "3"]];
Blockly.Msg["ARRAY_DROPDOWN_ITEMS"] = [["1", "1"],["2", "2"],["3", "3"],["4", "4"],["5", "5"],["6", "6"],["7", "7"],["8", "8"],["9", "9"],["10", "10"],["11", "11"],["12", "12"]];
Blockly.Msg["ARRAY_GET_ARRAY_VECTOR"] = "Matrice/Vettore";
Blockly.Msg["ARRAY_GET_ARRAY_VECTOR_TOOLTIP"] = "Restituisce una matrice o un vettore";

//--- Procedures ---//
Blockly.Msg["CAT_FUNCTIONS"] = "Funzioni";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "consenti dichiarazioni";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "conː";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://it.wikipedia.org/wiki/Funzione (informatica)";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Esegue la funzione definita dall'utente '%1'.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://it.wikipedia.org/wiki/Funzione (informatica)";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Esegue la funzione definita dall'utente '%1' ed usa il dato restituito.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "conː";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Crea '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Descrivi questa procedura...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "procedura";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "per";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Crea una procedura";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "ritorna";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Crea una funzione (con un output)";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Attenzioneː Questa funzione ha parametri duplicati.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Evidenzia la definizione di funzione";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Se un valore è vero allora restituisce un secondo valore.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Attenzioneː Questo blocco può essere usato solo all'interno di una definizione di funzione.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "nome inputː";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Aggiungi un input alla funzione/procedura.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "input";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Aggiungi, rimuovi o riordina input alla funzione.";
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = "Descrivi questa funzione...";
Blockly.Msg["PROCEDURES_DEFRETURN_DO"]  = "";
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = "funzione";
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = "per";

//--- Text ---//
Blockly.Msg["CAT_TEXT"] = "Testo";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "a %1 aggiungi il testo %2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Aggiunge del testo alla variabile '%1'.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "in minuscolo";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "con Iniziali Maiuscole";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "in maiuscolo";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Restituisce una copia del testo in un diverso formato maiuscole/minuscole.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "prendi la prima lettera";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "prendi la lettera # dalla fine";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "prendi la lettera #";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "prendi l'ultima lettera";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "prendi lettera casuale";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
Blockly.Msg["TEXT_CHARAT_TITLE"] = "nel testo %1 %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Restituisce la lettera nella posizione indicata.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "conta %1 in %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Contare quante volte una parte di testo si ripete all'interno di qualche altro testo.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Aggiungi un elemento al testo.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "Unisci";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Aggiungi, rimuovi o riordina le sezioni per riconfigurare questo blocco testo.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "alla lettera # dalla fine";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "alla lettera #";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "all'ultima lettera";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "nel testo";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "prendi sotto-stringa dalla prima lettera";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "prendi sotto-stringa dalla lettera # dalla fine";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "prendi sotto-stringa dalla lettera #";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Restituisce la porzione di testo indicata.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "trova la prima occorrenza del testo";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "trova l'ultima occorrenza del testo";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "nel testo %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Restituisce l'indice della prima occorrenza del primo testo all'interno del secondo testo. Restituisce %1 se il testo non viene trovato.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "è vuota %1";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Restituisce vero se la stringa è vuota";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "Crea una stringa con";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Crea una stringa unendo un certo numero di elementi.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "lunghezza di %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Restituisce il numero di lettere (inclusi gli spazi) nel testo fornito.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "scrivi %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Scrive il testo, numero o altro valore indicato.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Richiedi un numero all'utente.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Richiede del testo da parte dell'utente.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "richiedi numero con messaggio";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "richiedi testo con messaggio";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "sostituisci %1 con %2 in %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "sostituisci tutte le occorrenze di un certo testo con qualche altro testo.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "inverti %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Inverte l'ordine dei caratteri nel testo.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://it.wikipedia.org/wiki/Stringa_(informatica)";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Una lettera, una parola o una riga di testo.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "rimuovi spazi da entrambi gli estremi";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "rimuovi spazi a sinistra";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "rimuovi spazi a destra";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Restituisce una copia del testo con gli spazi rimossi ad uno o entrambe le estremità.";
Blockly.Msg["TEXT_APPEND_VARIABLE"] = "elemento";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = "elemento";
Blockly.Msg["TEXT_FROM_NUMBER"] = "String(x)";
Blockly.Msg["TEXT_FROM_NUMBER_TOOLTIP"] = "Converte da numero a stringa";

//--- Variables ---//
Blockly.Msg["CAT_VARIABLES"] = "Variabili";
Blockly.Msg["CAT_VAR_NUM"] = "Numeriche";
Blockly.Msg["CAT_VAR_TEXT"] = "Testo";
Blockly.Msg["CAT_VAR_BOOLEAN"] = "Logiche";
Blockly.Msg["CAT_VAR_DEFINE"] = "Definizioni";
Blockly.Msg["VAR_CREATE_INT"] = "integer";
Blockly.Msg["VAR_CREATE_LONG"] = "long";
Blockly.Msg["VAR_CREATE_FLOAT"] = "float";
Blockly.Msg["VAR_CREATE_BOOLEAN"] = "boolean";
Blockly.Msg["VAR_CREATE_STRING"] = "String";
Blockly.Msg["VAR_CREATE_CHAR"] = "char";
Blockly.Msg["VAR_TYPES"] = [["int", "int"],["long", "long"],["float", "float"],["bool", "bool"],["String", "String"],["char", "char"]];
Blockly.Msg["VAR_CREATE_DEFINE"] = "Definisci";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "elemento";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Crea 'imposta %1'";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Restituisce il valore di una variabile.";
Blockly.Msg["VARIABLES_INIT"] = "Inizializza";
Blockly.Msg["VARIABLES_INIT_TOOLTIP"] = "Assegna alla variabile un valore iniziale.";
Blockly.Msg["VARIABLES_CONST_SET"] = "Imposta la costante";
Blockly.Msg["VARIABLES_SET"] = "Imposta";
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Assegna alla variabile un valore.";
Blockly.Msg["VAR_CREATE_DEFINE_TOOLTIP"] = "Sostituisce ad un nome il valore assegnato";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Crea 'prendi %1'";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Una variabile denominata '%1' esiste già.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Una variabile nominata '%1' esiste già per un'altro tipo.";
Blockly.Msg["REMOVE_COMMENT"] = "Rimuovi commento";
Blockly.Msg["RENAME_VARIABLE"] = "Rinomina variabile...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Rinomina tutte le variabili '%1' in:";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Non si può cancellare la variabile '%1' perché è parte della definizione della funzione '%2'";
Blockly.Msg["DELETE_VARIABLE"] = "Cancella la variabile '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Cancella %1 usi della variabile '%2'?";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Crea variabile colore...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Crea variabile numero...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Crea variabile stringa...";
Blockly.Msg["NEW_VARIABLE"] = "Crea variabile...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Nome della variabile";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Tipo della nuova variabile:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";

//--- Colours HUE ---//
Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";
